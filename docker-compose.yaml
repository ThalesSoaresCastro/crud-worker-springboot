version: '3'
services:
  rabbitmq:
    image: 'rabbitmq:3.9-management'
    container_name: 'rabbitmq'
    ports:
      - '7887:5672'
      - '7888:15672'
    expose:
      - '7887'
      - '7888'

  postgres-server-api:
    image: postgres:9.6.24
    container_name: postgres-server-api
    restart: always
    environment:
      - POSTGRES_DB=crud
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./PostgresDB:/var/lib/postgresql/data
    expose:
      - '5432'
  server-api:
    container_name: server-api
    build:
      context:  './server-api'
      dockerfile: Dockerfile
    ports:
      - 7879:7879
    expose:
      - '7879'
    depends_on:
      - rabbitmq
      - postgres-server-api

  mongo-worker-app:
    image: mongo
    container_name: mongo-worker-app    
    #restart: unless-stopped
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=eventdb
    volumes:
      - ./Mongodb:/data/db
    ports:
      - 27017:27017
    expose:
      - '27017'
  worker-app:
    container_name: worker-app
    build:
      context:  './workerapp'
      dockerfile: Dockerfile
    ports:
      - 7880:7880
    expose:
      - '7880'
    depends_on:
      - rabbitmq
      - postgres-server-api
      - mongo-worker-app
      - server-api
 
volumes:
  PostgresDB: null
  Mongodb: null